{"version":3,"sources":["action.js","containers/AddTodo.js","components/Todo.component.js","containers/NoTaskText.js","components/ListTodo.component.js","constants/actionTypes.js","containers/VisibleTodoList.js","components/Link.component.js","containers/FilterLink.js","components/Footer.component.js","App.js","serviceWorker.js","reducers/todos.reducer.js","reducers/visibilityFilter.reducer.js","reducer.js","store.js","index.js"],"names":["nextTodoID","connect","_ref","dispatch","react_default","a","createElement","lib","autoComplete","floatingLabel","pattern","error","label","onKeyUp","e","keyCode","preventDefault","validatedString","test","target","value","trim","text","type","id","Todo","onClick","completed","style","textDecoration","opacity","NoTaskText","className","ListTodo","todos","toggleTodo","width","length","map","todo","Todo_component","key","containers_NoTaskText","VisibilityFilters","getVisibleTodos","filter","Error","state","visibilityFilter","Link","active","children","disabled","marginLeft","ownProps","Footer","FilterLink","App","containers_AddTodo","VisibleTodoList","Footer_component","Boolean","window","location","hostname","match","arguments","undefined","action","concat","Object","toConsumableArray","objectSpread","combineReducers","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1f3427a.chunk.js","sourcesContent":["let nextTodoID = 0;\r\n\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoID++,\r\n  text\r\n});\r\n\r\nexport const removeTodo = id => ({\r\n  type: 'REMOVE_TODO',\r\n  id\r\n});\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n});\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../action';\r\nimport { Textfield } from 'react-mdl';\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  return (\r\n    <Textfield autoComplete=\"off\" floatingLabel pattern=\"^[a-zA-Z0-9 ]*$\" error=\"Invalid input string !!\" label=\"What is your plan?\" onKeyUp={\r\n      e => {\r\n        if(e.keyCode === 13) {\r\n          e.preventDefault();\r\n          let validatedString = /^[a-zA-Z0-9 ]*$/.test(e.target.value);\r\n          if(e.target.value.trim() !== '' && validatedString) {\r\n            dispatch(addTodo(e.target.value));\r\n            e.target.value = '';\r\n          }\r\n        }\r\n      }\r\n    }>\r\n    </Textfield>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem, ListItemContent, ListItemAction, Switch } from 'react-mdl';\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n  <ListItem>\r\n    <ListItemContent \r\n        style={{\r\n            textDecoration: completed ? 'line-through' : 'none',\r\n            opacity: completed ? 0.5 : 1\r\n        }}\r\n    > \r\n      {text} \r\n    </ListItemContent>\r\n    <ListItemAction>\r\n      <Switch onClick={onClick} />\r\n    </ListItemAction>\r\n  </ListItem>\r\n);\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport { Spinner } from 'react-mdl';\r\n\r\nconst NoTaskText = () => (\r\n  <div className=\"notask-text\">\r\n    <span>NO TASK AVAILABLE</span>\r\n    <Spinner />\r\n  </div>\r\n);\r\n\r\nexport default NoTaskText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Todo from './Todo.component';\r\nimport NoTaskText from '../containers/NoTaskText';\r\nimport { List } from 'react-mdl';\r\n\r\nconst ListTodo = ({ todos, toggleTodo }) => (\r\n  <List style={{\r\n    width: '300px'\r\n  }}>\r\n    {\r\n      todos.length ? todos.map(todo => \r\n        <Todo key={todo.id} onClick={() => toggleTodo(todo.id)} text={todo.text} completed={todo.completed} />\r\n      ) : <NoTaskText />\r\n    }\r\n  </List>\r\n)\r\n\r\nListTodo.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      completed: PropTypes.bool.isRequired,\r\n      text: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ListTodo;","// define Visibility Filters\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}","import { connect } from 'react-redux';\r\nimport { toggleTodo } from '../action';\r\nimport ListTodo from '../components/ListTodo.component';\r\nimport { VisibilityFilters } from '../constants/actionTypes';\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos;\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter(todo => !todo.completed);\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(todo => todo.completed);\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  mapDispatchToProps\r\n  )(ListTodo);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-mdl';\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n  <Button\r\n    onClick={onClick}\r\n    disabled={active}\r\n    style = {{\r\n      marginLeft: '4px'\r\n    }}\r\n  >\r\n    { children }\r\n  </Button>\r\n)\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link;","import { connect } from 'react-redux';\r\nimport { setVisibilityFilter } from '../action';\r\nimport Link from '../components/Link.component';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link);","import React from 'react';\r\nimport FilterLink from '../containers/FilterLink';\r\nimport { VisibilityFilters } from '../constants/actionTypes';\r\n\r\nconst Footer = () => (\r\n  <div className=\"FilterBox\">\r\n    <span>FILTER: </span>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\r\n  </div>\r\n)\r\n\r\nexport default Footer","import React from 'react';\nimport './App.css';\nimport AddTodo from './containers/AddTodo';\nimport VisibleTodoList from './containers/VisibleTodoList';\nimport Footer from './components/Footer.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AddTodo />\n      <VisibleTodoList />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    case 'TOGGLE_TODO':\r\n      return state.map(todo => \r\n        todo.id === action.id ? { ...todo, completed: !todo.completed} : todo \r\n      )\r\n    case 'REMOVE_TODO':\r\n      return state.filter(todo => todo.id !== action.id);\r\n    default:\r\n      return state;\r\n  }\r\n} \r\n\r\nexport default todos;","import { VisibilityFilters } from '../constants/actionTypes';\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default visibilityFilter;","import { combineReducers } from 'redux';\r\nimport todos from './reducers/todos.reducer';\r\nimport visibilityFilter from './reducers/visibilityFilter.reducer';\r\n\r\nexport default combineReducers({ todos, visibilityFilter });\r\n\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nexport default createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}